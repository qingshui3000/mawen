<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhao.mawen.dao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zhao.mawen.dao.model.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="token" jdbcType="CHAR" property="token" />
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
        <result column="bio" jdbcType="VARCHAR" property="bio" />
        <result column="userface_url" jdbcType="VARCHAR" property="userfaceUrl" />
        <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    </resultMap>
    <sql id="Base_Column_List">
        id, `name`, account, token, gmt_create, gmt_modified, bio, userface_url,like_count
    </sql>
    <insert id="insert" parameterType="com.zhao.mawen.dao.model.User">
        insert into user(name,account,password,token,gmt_create,gmt_modified)
        values(#{name},#{account},#{password},#{token},#{gmtCreate},#{gmtModified})
    </insert>

    <select id="findByToken" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where token=#{token}
    </select>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where id=#{id}
    </select>

    <select id="findByIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findByAccountId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user where account_id=#{param1}
    </select>

    <update id="update" parameterType="com.zhao.mawen.dao.model.User">
        update user
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=BIGINT},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=CHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="likeCount != null">
                like_count = #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="bio != null">
                bio = #{bio,jdbcType=VARBINARY},
            </if>
            <if test="userfaceUrl != null">
                userface_url = #{userfaceUrl,jdbcType=VARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findByAccount" resultType="com.zhao.mawen.dao.model.User">
        select
        <include refid="Base_Column_List"/>
        from user where account = #{account};
    </select>

    <select id="find" resultType="com.zhao.mawen.dao.model.User">
        select
        <include refid="Base_Column_List"/>
        from user where account=#{account} and password=#{password};
    </select>

    <select id="findByName" resultType="com.zhao.mawen.dao.model.User">
        select
        <include refid="Base_Column_List"/>
        from user where name=#{name};
    </select>
</mapper>